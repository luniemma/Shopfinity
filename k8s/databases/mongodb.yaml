apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: shopfinity
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "admin"
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MONGO_PASSWORD
        - name: MONGO_INITDB_DATABASE
          value: "shopfinity"
        volumeMounts:
        - name: mongodb-storage
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /data/configdb
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: mongodb-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
      - name: mongodb-config
        emptyDir: {}
      - name: init-script
        configMap:
          name: mongodb-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: shopfinity
spec:
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: shopfinity
data:
  mongo-init.js: |
    // MongoDB initialization script for Shopfinity eCommerce Platform
    db = db.getSiblingDB('shopfinity');
    
    // Create a user for the application
    db.createUser({
      user: 'shopfinity',
      pwd: 'mongo123',
      roles: [
        {
          role: 'readWrite',
          db: 'shopfinity'
        }
      ]
    });
    
    // Create collections with validation
    db.createCollection('products');
    db.createCollection('categories');
    db.createCollection('reviews');
    
    // Create indexes for better performance
    db.products.createIndex({ "name": "text", "description": "text", "tags": "text" });
    db.products.createIndex({ "category": 1 });
    db.products.createIndex({ "price": 1 });
    
    print("Shopfinity MongoDB database initialized successfully!");